name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install dependencies
        run: dotnet restore project/Easy-Travel-BD/Easy-Travel-BD.sln

      - name: Build the project
        run: dotnet build project/Easy-Travel-BD/Easy-Travel-BD.sln --no-restore

      - name: Run tests and collect coverage
        run: |
          dotnet test project/Easy-Travel-BD/Easy-Travel-BD.sln \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults

      - name: Generate coverage report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          export PATH="$PATH:/home/runner/.dotnet/tools"
          reportgenerator \
            -reports:TestResults/**/coverage.cobertura.xml \
            -targetdir:coverage-report \
            -reporttypes:Html
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet sonarscanner begin /k:"Learnathon-By-Geeky-Solutions_dynamic-dev" /o:"learnathon-by-geeky-solutions" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.cobertura.xml" /d:sonar.exclusions="coverage-report/**/*"
          dotnet build project/Easy-Travel-BD/Easy-Travel-BD.sln
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

